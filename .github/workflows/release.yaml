name: nx-loki Release

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: "Enter the release version (e.g. patch, minor ...)"
        required: true
      first_release:
        description: "Is this the first release? (true/false)"
        required: true
        default: "false"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}

env:
  CI: true

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup action
        uses: ./.github/actions/setup

  lint:
    runs-on: ubuntu-latest
    needs:
      - setup

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Prepare job
        uses: ./.github/actions/job-setup

      - name: Run lint
        run: npm run nx -- run-many --target=lint --all

  tests:
    runs-on: ubuntu-latest
    needs:
      - setup

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Prepare job
        uses: ./.github/actions/job-setup

      - name: Run tests
        run: npm run nx -- run-many --target=test --all

  build:
    runs-on: ubuntu-latest
    needs:
      - lint
      - tests

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Prepare job
        uses: ./.github/actions/job-setup

      - name: Run build
        run: npm run nx -- run-many --target=build --all

  release:
    runs-on: ubuntu-latest
    needs:
      - build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Prepare job
        uses: ./.github/actions/job-setup

      - name: Set up Git user
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"

      - name: Run release
        run: |
          if [ "${{ github.event.inputs.first_release }}" == "true" ]; then
            npm run nx -- release --first-release --verbose ${{ github.event.inputs.release_version }}
          else
            npm run nx -- release --verbose ${{ github.event.inputs.release_version }}
          fi

      - name: Push tag
        run: git push --tags
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}