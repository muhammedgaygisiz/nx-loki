name: nx-loki Release
permissions:
  contents: write
  pull-requests: write

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: "Enter the release version (e.g. patch, minor ...)"
        required: true
      first_release:
        description: "Is this the first release? (true/false)"
        required: true
        default: "false"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}

env:
  CI: true
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup action
        uses: ./.github/actions/setup

  lint:
    runs-on: ubuntu-latest
    needs:
      - setup

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Prepare job
        uses: ./.github/actions/job-setup

      - name: Run lint
        run: npm run nx -- run-many --target=lint --all

  tests:
    runs-on: ubuntu-latest
    needs:
      - setup

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Prepare job
        uses: ./.github/actions/job-setup

      - name: Run tests
        run: npm run nx -- run-many --target=test --all

  release:
    runs-on: ubuntu-latest
    needs:
      - lint
      - tests

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Git user
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"

      - name: Create release branch
        run: |
          # Fetch latest main branch
          git checkout main
          git pull origin main
          
          RELEASE_BRANCH="release-${{ github.event.inputs.release_version }}"
          git checkout -b $RELEASE_BRANCH
          
          git push -u origin $RELEASE_BRANCH

      - name: Prepare job
        uses: ./.github/actions/job-setup

      - name: Run release
        run: |
          if [ "${{ github.event.inputs.first_release }}" == "true" ]; then
            npm run nx -- release --skip-publish --first-release --verbose ${{ github.event.inputs.release_version }}
          else
            npm run nx -- release --skip-publish --verbose ${{ github.event.inputs.release_version }}
          fi

      - name: Push tag
        run: git push --tags
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Push changes
        run: git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Pull Request
        run: |
          RELEASE_BRANCH="release-${{ github.event.inputs.release_version }}"
          gh pr create --base main --head $RELEASE_BRANCH --title "chore(release): bump to version $RELEASE_BRANCH :rocket:" --body ""

      - name: Publish to npm
        if: success() # Ensures this step runs only if all previous steps succeed
        run: npm run nx -- nx-release-publish nx-loki
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}